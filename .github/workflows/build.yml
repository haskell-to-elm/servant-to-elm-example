name: Frontend - compile, check, codegen, build, push

on:
  push:
    branches:
      - main
  # pull_request:
  #   types:
  #     - opened
  #     # "synchronize" means new commits pushed to the HEAD of the pull request branch
  #     - synchronize

permissions: read-all

env:
  REGISTRY: ghcr.io
  # What tags does:
  # - always tag with sha
  # - always tag with branch name
  # - if a release tag is 'v1.0.0', then tag 'latest' and '1.0.0'
  # More info: https://github.com/docker/metadata-action#tags-input
  TAGS: |
    type=sha
    type=ref,event=branch
    type=semver,pattern={{major}}.{{minor}}.{{patch}}

jobs:
  cancel-previous:
    runs-on: ubuntu-22.04
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0

  build:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Set up NODE
        uses: actions/setup-node@v3
        # Note: set up node early for caching elm-format
        with:
          node-version: 18.16
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Backend Build and test
        uses: freckle/stack-action@v4
        id: stack
        with:
          working-directory: backend
          # Note: Slow optimized builds only on `main`, but fast builds on other branches
          fast: ${{ github.ref != 'refs/heads/main' }}
          # Temporarily disabled
          pedantic: false
          test: true
          cache-prefix: lts-20.18
          stack-arguments: --copy-bins

      - name: Install elm-format (for codegen)
        run: npm install -g elm-format

      - name: Codegen
        run: ${{ steps.stack.outputs.local-bin-path }}/codegen

      - name: Setup Elm
        uses: jorelali/setup-elm@v5
        with:
          elm-version: 0.19.1

      - name: Frontend Install dependencies
        run: cd frontend && npm i

      - name: Get files changed after api client codegen
        id: changed-api-client-files
        uses: tj-actions/changed-files@v35
        with:
          files: frontend/src/Api/**

      - name: Fail if api client code is not up-to-date
        if: steps.changed-api-client-files.outputs.any_changed == 'true'
        run: |
          echo "Http Api client code is not up-to-date. Did you forget to run `stack run codegen`?"
          exit 1

      - name: Frontend Typecheck
        run: cd frontend && npm run typecheck

      - name: Frontend Validate format
        run: cd frontend && npm run format-validate

      - name: Frontend Run code review
        run: cd frontend && npm run review

      # - name: Frontend Run tests
      #   run: npm run test

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Prepare tags and labels (backend)
        id: meta-backend
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/VladimirLogachev/servant-to-elm-example-backend
          tags: ${{ env.TAGS }}

      # - name: Build and push Docker image (server)
      #   uses: docker/build-push-action@v3
      #   with: 
      #     context: server
      #     file: server/Dockerfile
      #     build-contexts: bin_path_context=/home/runner/.local/bin
      #     push: true
      #     tags: ${{ steps.meta-server.outputs.tags}}
      #     labels: ${{ steps.meta-server.outputs.labels}}
