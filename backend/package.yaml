name:                backend
version:             0.1.0.0
github:              "haskell-to-elm/servant-to-elm-example"
license:             BSD3
author:              "Vladimir Logachev"
maintainer:          "vladimir@logachev.dev"
copyright:           "2022 Vladimir Logachev"

description: Fullstack web app, an example of servant-to-elm

language: GHC2021

default-extensions:
  - NoPolyKinds # Note: Breaks Elm instances for parametrized types
  - DataKinds
  - DeriveAnyClass
  - DeriveGeneric
  - DerivingStrategies
  - DerivingVia
  - DuplicateRecordFields
  - FlexibleContexts
  - FlexibleInstances
  - ImportQualifiedPost
  - LambdaCase
  - MultiParamTypeClasses
  - NamedFieldPuns
  - RankNTypes
  - NoMonomorphismRestriction
  - OverloadedStrings
  - RankNTypes
  - TupleSections
  - TypeApplications
  - TypeOperators

ghc-options:
  # Use up to 8 cores for compilation https://ghc.gitlab.haskell.org/ghc/doc/users_guide/using.html?highlight=j#ghc-flag--j[%E2%9F%A8n%E2%9F%A9]
  - -j8
  # Set up rts options for GHC itself https://ghc.gitlab.haskell.org/ghc/doc/users_guide/runtime_control.html#setting-rts-options
  - +RTS -A32m -RTS
  # Optimization level:
  # -O0 produces a non-optimized binary (significantly reduces Seq performance), but builds fast.
  # -O2 produces a heavily optimized binary, but builds ~ 2 times slower.
  # Note: Stack reuses existing binaries instead of rebuilding if the source code hasn't changed.
  # We build optimized binaries by default and turn optimizations off by `--fast` flag.
  - -O2
    # Enables local documentation
  - -haddock
    # Enable all possible warnings as errors (Werror is provided manually in dockerfile for production builds and CI)
  - -Weverything
    # Intentionally ignore some warnings
  - -Wno-all-missed-specialisations
  - -Wno-missed-specialisations
  - -Wno-missing-local-signatures
  - -Wno-implicit-prelude
  - -Wno-missing-export-lists
  - -Wno-unsafe
  - -Wno-safe
  - -Wno-unused-packages
  - -Wno-missing-kind-signatures
  # Temporary disabled
  - -Wno-ambiguous-fields
  # Not sure if it's really useful for us, because some modules are still not "safe haskell".
  - -Wno-missing-safe-haskell-mode
    # Temporarily disabled warnings which need to be fixed eventually
    # 1. It is inconvenient to specify imports for all record fields and all value constructors
    # We need to find a better way.
  - -Wno-missing-import-lists
    # 2. Because of hpack implementation details
  - -Wno-prepositive-qualified-module

dependencies:
- base >= 4.7 && < 5
- aeson
- directory
- elm-syntax
- filepath
- generics-sop
- haskell-to-elm
- mtl
- prettyprinter
- servant-server
- servant-to-elm 
- sqlite-simple
- text
- unordered-containers
- wai-cors
- wai-extra
- warp
- process
library:
  source-dirs: src

executables:
  server:
    main:                Main.hs
    source-dirs:         server
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - backend

  codegen:
    main:                Main.hs
    source-dirs:         codegen
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - backend

